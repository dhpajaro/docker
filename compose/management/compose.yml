services:
  portainer:
    container_name: portainer
    environment:
      - PUID=${UID:-1000}
      - PGID=${GID:-1000}
      - TZ=${TIMEZONE}
    image: portainer/portainer-ce:latest
    ports:
      - 9443:9443
    privileged: true
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ../../data/management/portainer/config:/data
  speedtest-tracker:
    container_name: speedtest-tracker
    ports:
      - 3333:80
    env_file: speedtest-tracker.env
    environment:
      - PUID=${UID:-1000}
      - PGID=${GID:-1000}
      - TZ=${TIMEZONE}
      - APP_URL='http://${SERVER_DOMAIN}'
      - PUBLIC_DASHBOARD=true
      - SPEEDTEST_SCHEDULE=*/30 * * * *
      - PRUNE_RESULTS_OLDER_THAN=0
      - APP_TIMEZONE=${TIMEZONE}
      - DISPLAY_TIMEZONE=${TIMEZONE}
      - DB_CONNECTION=sqlite
    volumes:
      - ../../data/management/speedtest-tracker/config:/config
    image: lscr.io/linuxserver/speedtest-tracker:latest
    restart: always
  dozzle:
    container_name: dozzle
    restart: always
    image: amir20/dozzle:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 7000:8080
  duckdns:
    container_name: duckdns
    env_file: duckdns.env
    environment:
      - PUID=${UID:-1000}
      - PGID=${GID:-1000}
      - TZ=${TIMEZONE}
      - UPDATE_IP=ipv4
      - LOG_FILE=false
    image: lscr.io/linuxserver/duckdns:latest
    restart: always
    volumes:
      - ../../data/management/duckdns/config:/config
  homepage:
    container_name: homepage
    env_file: homepage.env
    image: ghcr.io/gethomepage/homepage:latest
    labels:
      - traefik.enable=true
      - traefik.http.routers.homepage.rule=Host(`${SERVER_DOMAIN}`)
      - traefik.http.routers.homepage_path.rule=Path(`/`)
      - traefik.docker.network=traefik-proxy
    ports:
      - 3000:3000
    restart: always
    volumes:
      - ../../data/management/homepage/config:/app/config
      - ../../data/management/homepage/icons:/app/public/icons
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ${DATA}:/DISK_1
      - ${USB}:/DISK_2
    networks:
      - default
      - traefik-proxy
      - media_server
  openspeedtest:
    container_name: openspeedtest
    image: openspeedtest/latest
    ports:
      - 4100:3000
    restart: always
networks:
  media_server:
    external: true
  traefik-proxy:
    external: true
